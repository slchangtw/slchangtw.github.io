<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Be a Problem Solver</title><link>https://slchangtw.github.io/posts/</link><description>Recent content in Posts on Be a Problem Solver</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 28 Sep 2023 20:42:31 +0800</lastBuildDate><atom:link href="https://slchangtw.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Principle of Clean Python Code - Naming, Comments, Functions</title><link>https://slchangtw.github.io/posts/20230928_python_clean_code_naming_comment_function/</link><pubDate>Thu, 28 Sep 2023 20:42:31 +0800</pubDate><guid>https://slchangtw.github.io/posts/20230928_python_clean_code_naming_comment_function/</guid><description>&lt;p>Writing Clean code aims to make the code easy to read, understand, and maintain. It is a good practice to follow the principle of clean code when writing Python code. In this article, I will share some principles of clean Python code in naming, commenting and functons.&lt;/p></description></item><item><title>Use pyenv to manage Python versions</title><link>https://slchangtw.github.io/posts/20230925_pyenv/</link><pubDate>Mon, 25 Sep 2023 10:06:07 +0800</pubDate><guid>https://slchangtw.github.io/posts/20230925_pyenv/</guid><description>&lt;p>During development, you may require different Python versions for various projects. For example, you might need Python 3.6 for one project and Python 3.10 for another. Instead of installing different Python versions on your system, you can use pyenv to manage multiple Python versions.&lt;/p></description></item></channel></rss>